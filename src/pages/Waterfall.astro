---
const title = "uview-plus 组件文档";
const description = "这是一个瀑布流形式的组件，内容分为左右两列，结合 uview 的懒加载组件效果更佳。相较于某些只是奇偶数左右分别，或者没有利用 vue 作用域插槽的做法，uView 的瀑布流实现了真正的组件化，搭配 LazyLoad 懒加载和 loadMore 加载更多组件，让您开箱即用，眼前一亮。";
const keywords = "uview-plus-free, uview-plus 免费文档, uView Plus, uView-Plus, uView, 免费文档, 离线文档, 组件, 移动端组件, 前端, UI, 组件库, liusheng, liusheng22";
const image = "/assets/logo.png";
const site_name = "uView-Plus-Free 免费组件文档";
const route = "/Waterfall";

import Layout from '../layouts/Layout.astro';
---

<Layout 
  title={title} 
  description={description} 
  keywords={keywords}
  image={image}
  site_name={site_name}
  route={route}
>
  <h1>Waterfall 瀑布流</h1>
      <p>
        这是一个瀑布流形式的组件，内容分为左右两列，结合 uview
        的懒加载组件效果更佳。相较于某些只是奇偶数左右分别，或者没有利用 vue
        作用域插槽的做法，uView 的瀑布流实现了真正的组件化，搭配 LazyLoad
        懒加载和 loadMore 加载更多组件，让您开箱即用，眼前一亮。
      </p>

      <h2>注意</h2>
      <ul>
        <li>在微信小程序中，需要 hx2.8.11 才支持在懒加载中结合其他组件。</li>
        <li>
          从 1.2.8 版本起，新增了清空列表和移除某条数据的组件方法，原 flow-list
          参数，需要改为 v-model 接收传值。
        </li>
        <li>
          由于 hx 的问题，支付宝小程序需要 hx2.8.2 版本及以上才支持本组件。
        </li>
      </ul>

      <h2>平台差异说明</h2>
      <div class="table-container">
        <div class="table-row table-header">
          <div class="table-cell">App</div>
          <div class="table-cell">H5</div>
          <div class="table-cell">微信小程序</div>
          <div class="table-cell">支付宝小程序</div>
          <div class="table-cell">百度小程序</div>
          <div class="table-cell">头条小程序</div>
          <div class="table-cell">QQ 小程序</div>
        </div>
        <div class="table-row">
          <div class="table-cell">√</div>
          <div class="table-cell">√</div>
          <div class="table-cell">√</div>
          <div class="table-cell">√</div>
          <div class="table-cell">√</div>
          <div class="table-cell">√</div>
          <div class="table-cell">√</div>
        </div>
      </div>

      <h2>基本使用</h2>
      <p>
        本组件利用了 vue 的作用域插槽(详见 vue 文档 (opens new
        window))特性，将传入 waterfall 内部的数据，通过
        slot(作用域插槽)让用户能在父组件中引用和配置对应的数据，这样做的原因是可以让用户自定义列表
        item 的结构和样式，达到真正的组件化。
      </p>
      <p>
        需要注意的是，组件内部导出的数据，需要使用 template 元素接收，同时通过
        v-slot 指定左右两列的 slot，如 v-slot:left="list"，这里的 list
        变量名为用户自定义的(意味着您可以起名叫 data
        都是没问题的)，它为一个对象，它内部分别有 leftList 和
        rightList，用于渲染左右两列的数据，见如下完整示例：
      </p>

      <h3>核心代码</h3>
      <pre class="language-html">
        <code>
    &lt;up-waterfall v-model="flowList"&gt;
      &lt;template v-slot:left="&#123;leftList&#125;"&gt;
        &lt;view v-for="(item, index) in leftList" :key="index"&gt;
          &lt;!-- 这里编写您的内容，item 为您传递给 v-model 的数组元素 --&gt;
        &lt;/view&gt;
      &lt;/template&gt;
      &lt;template v-slot:right="&#123;rightList&#125;"&gt;
        &lt;view v-for="(item, index) in rightList" :key="index"&gt;
          &lt;!-- 这里编写您的内容，item 为您传递给 v-model 的数组元素 --&gt;
        &lt;/view&gt;
      &lt;/template&gt;
    &lt;/up-waterfall&gt;
        </code>
      </pre>

      <h2>移除或清空数据</h2>
      <p>移除或者清空，都需要通过 ref 调用组件内部的方法。</p>

      <h3>移除数据</h3>
      <p>
        组件内部方法名为 remove，需要传入"id"值，这个"id"键值的名称配置参数为
        idKey(默认 id)，如下：
      </p>
      <p>假设您的数据为:</p>
      <pre class="language-html">
        <code>
    let arr = [
      &#123;idx: 1, name: 'lisa'&#125;,
      &#123;idx: 2, name: 'mary'&#125;
    ]
        </code>
      </pre>
      <p>那么您应该配置 idKey 为 idx。</p>

      <h3>清空数据</h3>
      <p>通过 ref 手动调用组件内部的 clear 方法，可以清空左右两列的数据。</p>
      <p>说明：具体实现方法，请见下方的示例代码</p>

      <h2>完整应用示例</h2>
      <pre class="language-html">
        <code>
    &lt;template&gt;
      &lt;view class="wrap"&gt;
        &lt;up-button @click="clear"&gt;清空列表&lt;/up-button&gt;
        &lt;up-waterfall v-model="flowList" ref="uWaterfallRef"&gt;
          &lt;template v-slot:left="&#123;leftList&#125;"&gt;
            &lt;view class="demo-warter" v-for="(item, index) in leftList" :key="index"&gt;
              &lt;!-- 警告：微信小程序中需要 hx2.8.11 版本才支持在 template 中结合其他组件，比如下方的 lazy-load 组件 --&gt;
              &lt;up-lazy-load threshold="-450" border-radius="10" :image="item.image" :index="index"&gt;&lt;/up-lazy-load&gt;
              &lt;view class="demo-title"&gt;
                &#123;&#123;item.title&#125;&#125;
              &lt;/view&gt;
              &lt;view class="demo-price"&gt;
                &#123;&#123;item.price&#125;&#125;元
              &lt;/view&gt;
              &lt;view class="demo-tag"&gt;
                &lt;view class="demo-tag-owner"&gt;
                  自营
                &lt;/view&gt;
                &lt;view class="demo-tag-text"&gt;
                  放心购
                &lt;/view&gt;
              &lt;/view&gt;
              &lt;view class="demo-shop"&gt;
                &#123;&#123;item.shop&#125;&#125;
              &lt;/view&gt;
              &lt;up-icon name="close-circle-fill" color="#fa3534" size="34" class="u-close" @click="remove(item.id)"&gt;&lt;/up-icon&gt;
            &lt;/view&gt;
          &lt;/template&gt;
          &lt;template v-slot:right="&#123;rightList&#125;"&gt;
            &lt;view class="demo-warter" v-for="(item, index) in rightList" :key="index"&gt;
              &lt;up-lazy-load threshold="-450" border-radius="10" :image="item.image" :index="index"&gt;&lt;/up-lazy-load&gt;
              &lt;view class="demo-title"&gt;
                &#123;&#123;item.title&#125;&#125;
              &lt;/view&gt;
              &lt;view class="demo-price"&gt;
                &#123;&#123;item.price&#125;&#125;元
              &lt;/view&gt;
              &lt;view class="demo-tag"&gt;
                &lt;view class="demo-tag-owner"&gt;
                  自营
                &lt;/view&gt;
                &lt;view class="demo-tag-text"&gt;
                  放心购
                &lt;/view&gt;
              &lt;/view&gt;
              &lt;view class="demo-shop"&gt;
                &#123;&#123;item.shop&#125;&#125;
              &lt;/view&gt;
              &lt;up-icon name="close-circle-fill" color="#fa3534" size="34" class="u-close" @click="remove(item.id)"&gt;&lt;/up-icon&gt;
            &lt;/view&gt;
          &lt;/template&gt;
        &lt;/up-waterfall&gt;
        &lt;up-loadmore bg-color="rgb(240, 240, 240)" :status="loadStatus" @loadmore="addRandomData"&gt;&lt;/up-loadmore&gt;
      &lt;/view&gt;
    &lt;/template&gt;
    
    &lt;script&gt;
      export default &#123;
        data() &#123;
          return &#123;
            loadStatus: 'loadmore',
            flowList: [],
            list: [
              &#123;
                price: 35,
                title: '北国风光，千里冰封，万里雪飘',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic.sc.chinaz.com/Files/pic/pic9/202002/zzpic23327_s.jpg',
              &#125;,
              &#123;
                price: 75,
                title: '望长城内外，惟余莽莽',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic.sc.chinaz.com/Files/pic/pic9/202002/zzpic23325_s.jpg',
              &#125;,
              &#123;
                price: 385,
                title: '大河上下，顿失滔滔',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic2.sc.chinaz.com/Files/pic/pic9/202002/hpic2119_s.jpg',
              &#125;,
              &#123;
                price: 784,
                title: '欲与天公试比高',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic2.sc.chinaz.com/Files/pic/pic9/202002/zzpic23369_s.jpg',
              &#125;,
              &#123;
                price: 7891,
                title: '须晴日，看红装素裹，分外妖娆',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic2.sc.chinaz.com/Files/pic/pic9/202002/hpic2130_s.jpg',
              &#125;,
              &#123;
                price: 2341,
                shop: '李白杜甫白居易旗舰店',
                title: '江山如此多娇，引无数英雄竞折腰',
                image: 'http://pic1.sc.chinaz.com/Files/pic/pic9/202002/zzpic23346_s.jpg',
              &#125;,
              &#123;
                price: 661,
                shop: '李白杜甫白居易旗舰店',
                title: '惜秦皇汉武，略输文采',
                image: 'http://pic1.sc.chinaz.com/Files/pic/pic9/202002/zzpic23344_s.jpg',
              &#125;,
              &#123;
                price: 1654,
                title: '唐宗宋祖，稍逊风骚',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic1.sc.chinaz.com/Files/pic/pic9/202002/zzpic23343_s.jpg',
              &#125;,
              &#123;
                price: 1678,
                title: '一代天骄，成吉思汗',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic1.sc.chinaz.com/Files/pic/pic9/202002/zzpic23343_s.jpg',
              &#125;,
              &#123;
                price: 924,
                title: '只识弯弓射大雕',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic1.sc.chinaz.com/Files/pic/pic9/202002/zzpic23343_s.jpg',
              &#125;,
              &#123;
                price: 8243,
                title: '俱往矣，数风流人物，还看今朝',
                shop: '李白杜甫白居易旗舰店',
                image: 'http://pic1.sc.chinaz.com/Files/pic/pic9/202002/zzpic23343_s.jpg',
              &#125;,
            ]
          &#125;
        &#125;,
        onLoad() &#123;
          this.addRandomData();
        &#125;,
        onReachBottom() &#123;
          this.loadStatus = 'loading';
          // 模拟数据加载
          setTimeout(() =&gt; &#123;
            this.addRandomData();
            this.loadStatus = 'loadmore';
          &#125;, 1000)
        &#125;,
        methods: &#123;
          addRandomData() &#123;
            for(let i = 0; i &lt; 10; i++) &#123;
              let index = this.$u.random(0, this.list.length-1);
              // 先转成字符串再转成对象，避免数组对象引用导致数据混乱
              let item = JSON.parse(JSON.stringify(this.list[index]))
              item.id = this.$u.guid();
              this.flowList.push(item);
            &#125;
          &#125;,
          remove(id) &#123;
            this.$refs.uWaterfallRef.remove(id);
          &#125;,
          clear() &#123;
            this.$refs.uWaterfallRef.clear();
          &#125;
        &#125;
      &#125;
    &lt;/script&gt;
    
    &lt;style&gt;
      /* page 不能写带 scope 的 style 标签中，否则无效 */
      page &#123;
        background-color: rgb(240, 240, 240);
      &#125;
    &lt;/style&gt;
    
    &lt;style lang="scss" scoped&gt;
      .demo-warter &#123;
        border-radius: 8px;
        margin: 5px;
        background-color: #ffffff;
        padding: 8px;
        position: relative;
      &#125;
    
      .u-close &#123;
        position: absolute;
        top: 32rpx;
        right: 32rpx;
      &#125;
    
      .demo-image &#123;
        width: 100%;
        border-radius: 4px;
      &#125;
    
      .demo-title &#123;
        font-size: 30rpx;
        margin-top: 5px;
        color: $up-main-color;
      &#125;
    
      .demo-tag &#123;
        display: flex;
        margin-top: 5px;
      &#125;
    
      .demo-tag-owner &#123;
        background-color: $up-type-error;
        color: #FFFFFF;
        display: flex;
        align-items: center;
        padding: 4rpx 14rpx;
        border-radius: 50rpx;
        font-size: 20rpx;
        line-height: 1;
      &#125;
    
      .demo-tag-text &#123;
        border: 1px solid $up-type-primary;
        color: $up-type-primary;
        margin-left: 10px;
        border-radius: 50rpx;
        line-height: 1;
        padding: 4rpx 14rpx;
        display: flex;
        align-items: center;
        border-radius: 50rpx;
        font-size: 20rpx;
      &#125;
    
      .demo-price &#123;
        font-size: 30rpx;
        color: $up-type-error;
        margin-top: 5px;
      &#125;
    
      .demo-shop &#123;
        font-size: 22rpx;
        color: $up-tips-color;
        margin-top: 5px;
      &#125;
    &lt;/style&gt;
        </code>
      </pre>

      <h2>注意事项</h2>
      <ul>
        <li>
          上方的示例中，结合了 uview 的 lazyload 懒加载和 loadmore
          加载更多组件，具体用法，请见文档。
        </li>
        <li>
          需要通过 v-model
          传递参数，将数据传递给组件，组件内部将每次新增的数据，通过动态查询左右列的高度添加到高度低的一列。
        </li>
        <li>
          组件有一个 add-time
          参数，用于将单条数据添加到队列的时间间隔，因为图片加载是需要时间的，所以瀑布流左右列的高度会不定时改变，add-time
          值越大，对程序效果越好，但是对用户来说，越大值可能就是以能感受的速度一个一个添加到队列尾部的，所以这是一个双面性的结果。
        </li>
        <li>
          由于图片加载完成的时机是不确定的，导致图片加载完成时，队列的高度会发生改变，而且这个时机是无法确定的，所以每次添加数据的时候，单次请求的所有数据中最后一个数据不一定能准确添加高度更低的队列一侧，但是可以保证下一次请求数据的第一条能准确添加到队列高度低的一侧。
        </li>
      </ul>

      <h2>API</h2>
      <h3>IndexBar Props</h3>
      <p>
        注意：通过 v-model 双向绑定传递参数，因为组件内部需要修改父组件的值。
      </p>
      <div class="table-container">
        <div class="table-row table-header">
          <div class="table-cell">参数</div>
          <div class="table-cell">说明</div>
          <div class="table-cell">类型</div>
          <div class="table-cell">默认值</div>
          <div class="table-cell">可选值</div>
        </div>
        <div class="table-row">
          <div class="table-cell">add-time</div>
          <div class="table-cell">
            单条数据添加到队列的时间间隔，单位ms，见上方注意事项说明
          </div>
          <div class="table-cell">String | Number</div>
          <div class="table-cell">200</div>
          <div class="table-cell">-</div>
        </div>
        <div class="table-row">
          <div class="table-cell">idKey</div>
          <div class="table-cell">数据的唯一值的键名，见上方说明</div>
          <div class="table-cell">String</div>
          <div class="table-cell">id</div>
          <div class="table-cell">-</div>
        </div>
      </div>

      <h3>Methods</h3>
      <p>这些为组件内部的方法，需要通过 ref 调用</p>
      <div class="table-container">
        <div class="table-row table-header">
          <div class="table-cell">参数</div>
          <div class="table-cell">说明</div>
        </div>
        <div class="table-row">
          <div class="table-cell">clear</div>
          <div class="table-cell">清空列表数据</div>
        </div>
        <div class="table-row">
          <div class="table-cell">remove(id)</div>
          <div class="table-cell">id为唯一的"id"值，见上方说明</div>
        </div>
      </div>
</Layout>